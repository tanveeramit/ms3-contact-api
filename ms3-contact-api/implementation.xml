<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
    <flow name="implementationFlow-GET">
        <logger message="GET Started" level="INFO" doc:name="Logger"/>
        <expression-component doc:name="Set Error Var"><![CDATA[flowVars.status = "failure"; 
flowVars.errorCode = "500";
flowVars.errorType = "Internal Server Error";
flowVars.errorMessage = "Database Service call failed";]]></expression-component>
        <enricher target="#[flowVars.IdentificationVar]" doc:name="Message Enricher">
            <db:select config-ref="MySQL_Configuration" doc:name="Query Identification">
                <db:parameterized-query><![CDATA[select * from Identification where ContactId=#[flowVars.contactId]]]></db:parameterized-query>
            </db:select>
        </enricher>
        <enricher target="#[flowVars.AddressVar]" doc:name="Message Enricher">
            <db:select config-ref="MySQL_Configuration" doc:name="Query Address">
                <db:parameterized-query><![CDATA[select * from Address where ContactId=#[flowVars.contactId]]]></db:parameterized-query>
            </db:select>
        </enricher>
        <db:select config-ref="MySQL_Configuration" doc:name="Query Communication">
            <db:parameterized-query><![CDATA[select * from Communication where ContactId=#[flowVars.contactId]]]></db:parameterized-query>
        </db:select>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	Identification: flowVars.IdentificationVar[0],
	Address: flowVars.AddressVar,
	Communication: payload
	
}]]></dw:set-payload>
        </dw:transform-message>
        <exception-strategy ref="doc-globalCatch_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>
     
    <flow name="implementationFlow-POST">
        <logger message="POST Started " level="INFO" doc:name="Logger"/>
        <dw:transform-message doc:name="Transform Message" metadata:id="2a2f19c2-4fc6-4814-be44-c3f33d0dacac">
            <dw:input-payload doc:sample="sample_data\json.json"/>
            <dw:set-variable variableName="inputPayload"><![CDATA[%dw 1.0
%output application/java
---
{
	Identification: {
		FirstName: payload.Identification.FirstName,
		LastName: payload.Identification.LastName,
		DOB: payload.Identification.DOB,
		Gender: payload.Identification.Gender,
		Title: payload.Identification.Title
	},
	Address: payload.Address map ((address , indexOfAddress) -> {
		number: address.number,
		street: address.street,
		Unit: address.Unit,
		City: address.City,
		State: address.State,
		zipcode: address.zipcode
	}),
	Communication: payload.Communication map ((communication , indexOfCommunication) -> {
		type: communication.type,
		value: communication.value,
		preferred: communication.preferred
	})
}]]></dw:set-variable>
        </dw:transform-message>
        <expression-component doc:name="Set Error Var"><![CDATA[flowVars.status = "failure"; 
flowVars.errorCode = "500";
flowVars.errorType = "Internal Server Error";
flowVars.errorMessage = "Database Service call failed";]]></expression-component>
        <db:insert config-ref="MySQL_Configuration" autoGeneratedKeys="true" autoGeneratedKeysColumnNames="ContactId" doc:name="Insert Identification">
            <db:parameterized-query><![CDATA[insert into Identification (FirstName,LastName,DOB,Gender,Title) values(#[flowVars.inputPayload.Identification.FirstName], #[flowVars.inputPayload.Identification.LastName],#[flowVars.inputPayload.Identification.DOB], #[flowVars.inputPayload.Identification.Gender],#[flowVars.inputPayload.Identification.Title])]]></db:parameterized-query>
        </db:insert>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
flowVars.inputPayload.Address]]></dw:set-payload>
            <dw:set-variable variableName="contactIdVar"><![CDATA[%dw 1.0
%output application/java
---
payload.GENERATED_KEY]]></dw:set-variable>
        </dw:transform-message>
        <foreach doc:name="For Each">
            <db:insert config-ref="MySQL_Configuration" doc:name="Insert Address">
                <db:parameterized-query><![CDATA[insert into address values(#[flowVars.contactIdVar[0]], #[payload.type], #[payload.number], #[payload.street], #[payload.Unit], #[payload.City], #[payload.State], #[payload.zipcode])]]></db:parameterized-query>
            </db:insert>
        </foreach>
        <set-payload value="#[flowVars.inputPayload.Communication]" doc:name="Set Payload"/>
        <foreach doc:name="For Each">
            <db:insert config-ref="MySQL_Configuration" doc:name="Insert Communication">
                <db:parameterized-query><![CDATA[insert into Communication values(#[flowVars.contactIdVar[0]], #[payload.type], #[payload.value], #[payload.preferred])]]></db:parameterized-query>
            </db:insert>
        </foreach>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
   userId: flowVars.contactIdVar[0]
}]]></dw:set-payload>
        </dw:transform-message>
        <exception-strategy ref="doc-globalCatch_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="implementationFlow-PUT">
        <logger level="INFO" doc:name="Logger" message="PUT Started"/>
        <dw:transform-message doc:name="Transform Message" metadata:id="34e2f85b-e803-4613-94fc-cd3ea1db5d76">
            <dw:set-variable variableName="inputPayload"><![CDATA[%dw 1.0
%output application/java
---
{
	Identification: {
		FirstName: payload.Identification.FirstName,
		LastName: payload.Identification.LastName,
		DOB: payload.Identification.DOB,
		Gender: payload.Identification.Gender,
		Title: payload.Identification.Title
	},
	Address: payload.Address map ((address , indexOfAddress) -> {
		number: address.number,
		street: address.street,
		Unit: address.Unit,
		City: address.City,
		State: address.State,
		zipcode: address.zipcode
	}),
	Communication: payload.Communication map ((communication , indexOfCommunication) -> {
		type: communication.type,
		value: communication.value,
		preferred: communication.preferred
	})
}]]></dw:set-variable>
        </dw:transform-message>
        <expression-component doc:name="Set Error Var"><![CDATA[flowVars.status = "failure"; 
flowVars.errorCode = "500";
flowVars.errorType = "Internal Server Error";
flowVars.errorMessage = "Database Service call failed";]]></expression-component>
        <db:update config-ref="MySQL_Configuration" doc:name="UPdate Identification">
            <db:parameterized-query><![CDATA[update Identification set FirstName=#[flowVars.inputPayload.FirstName], LastName=#[flowVars.inputPayload.LastName], DOB=#[flowVars.inputPayload.DOB], Gender=#[flowVars.inputPayload.Gender], Title=#[flowVars.inputPayload.Title] where ContactId=#[flowVars.contactId]]]></db:parameterized-query>
        </db:update>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
flowVars.inputPayload.Address]]></dw:set-payload>
        </dw:transform-message>
        <foreach doc:name="For Each">
            <db:update config-ref="MySQL_Configuration" doc:name="Update Address">
                <db:parameterized-query><![CDATA[update Address set type=#[payload.type], number=#[payload.number], street=#[payload.street], Unit=#[payload.Unit], City=#[payload.City], State=#[payload.State],zipcode=#[payload.zipcode] where ContactId=#[flowVars.contactId]]]></db:parameterized-query>
            </db:update>
        </foreach>
        <set-payload value="#[flowVars.inputPayload.Communication]" doc:name="Set Payload"/>
        <foreach doc:name="For Each">
            <db:update config-ref="MySQL_Configuration" doc:name="Communication Database">
                <db:parameterized-query><![CDATA[update Communication set type=#[payload.type], value=#[payload.value], preferred=#[payload.preferred] where ContactId=#[flowVars.contactId]]]></db:parameterized-query>
            </db:update>
        </foreach>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"status" : "updated"
}]]></dw:set-payload>
        </dw:transform-message>
        <exception-strategy ref="doc-globalCatch_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="implementationFlow-DELETE">
        <logger level="INFO" doc:name="Logger" message="DELETE Started"/>
        <expression-component doc:name="Set Error Var"><![CDATA[flowVars.status = "failure"; 
flowVars.errorCode = "500";
flowVars.errorType = "Internal Server Error";
flowVars.errorMessage = "Database Service call failed";]]></expression-component>
        <db:delete config-ref="MySQL_Configuration" doc:name="Delete Identification">
            <db:parameterized-query><![CDATA[delete from Identification where ContactId=#[flowVars.contactId]]]></db:parameterized-query>
        </db:delete>
        <db:delete config-ref="MySQL_Configuration" doc:name="Delete Address">
            <db:parameterized-query><![CDATA[delete from Address where ContactId=#[flowVars.contactId]]]></db:parameterized-query>
        </db:delete>
        <db:delete config-ref="MySQL_Configuration" doc:name="Delete Communication">
            <db:parameterized-query><![CDATA[delete from Communication where ContactId=#[flowVars.contactId]]]></db:parameterized-query>
        </db:delete>
        <exception-strategy ref="doc-globalCatch_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>
</mule>
